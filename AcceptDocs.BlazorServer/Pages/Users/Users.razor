@page "/user"
@inject IUserService _userService
@inject DialogService _dialogService
@inject NotificationService _notificationService

<PageTitle>Użytkownicy</PageTitle>

<RadzenStack Gap="1rem" class="mx-3 mb-3">
    <RadzenStack Gap="1rem" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
        <RadzenText TextStyle="TextStyle.H5">Użytkownicy</RadzenText>
        <NavigationButton Text="Dodaj użytkownika" Path="user/add" />
    </RadzenStack>

    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" Data="@_users" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
        <Columns>
            <RadzenDataGridColumn Property="UserId" Title="Id" Width="100px"/>
            <RadzenDataGridColumn Property="FirstName" Title="Imię" />
            <RadzenDataGridColumn Property="LastName" Title="Nazwisko" />
            <RadzenDataGridColumn Property="Login" Title="Login" />
            <RadzenDataGridColumn Title="Poziom stanowiska" >
                <Template Context="user">
                    @user.PositionLevel?.Name
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Property="Position" Title="Stanowisko" />
            <RadzenDataGridColumn Title="Akcje" Width="100px" Sortable="false" Filterable="false">
                <Template Context="user">
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="5px">
                        <NavigationButton Icon="edit" Size="ButtonSize.Small" Path="@("user/update/" + user.UserId)" />
                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(() => Delete(user.UserId))"/>
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    private List<UserDto> _users = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _users = _userService.GetAllWithPositionLevel();
    }

    private async Task Delete(int id)
    {
        if (_userService.CanDeleteUser(id)) {
            bool? confirmed = await _dialogService.Confirm(
                "Czy na pewno chcesz usunąć użytkownika?",
                "Potwierdzenie",
                new ConfirmOptions()
                {
                    OkButtonText = "Tak",
                    CancelButtonText = "Nie",
                }
            );

            if (confirmed == true) {
                _userService.Delete(id);
                _notificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Sukces",
                    Detail = "Pomyślnie usunięto użytkownika",
                    Duration = 4000
                });
                OnInitialized();
            }
        } else {
            _notificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Nie można usunąć użytkownika",
                Detail = "Użytkownik posiada aktywne prośby o akceptację dokumentu.",
                Duration = 4000
            });
        }
    }
}
