@page "/positionLevel/add"
@inject IPositionLevelService _positionLevelService
@inject NavigationHelper _navigationHelper
@inject NotificationService _notificationService

<PageTitle>Dodaj poziom stanowiska</PageTitle>

<RadzenStack Gap="1rem" class="mx-3 mb-3">
    <RadzenStack Gap="1rem" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
        <RadzenText TextStyle="TextStyle.H5">Dodawanie poziomu stanowiska</RadzenText>
        <NavigationButton />
    </RadzenStack>

    <RadzenCard>
        <EditForm Model="@_positionLevel" OnValidSubmit="@SubmitPositionLevel">
            <FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="true" />
            <ValidationSummary />

            <RadzenStack Gap="1rem">
                <RadzenRow Gap="1rem">
                    <RadzenColumn Size="12" SizeSM="6">
                            <RadzenFormField Text="Nazwa">
                                <RadzenTextBox @bind-Value="@_positionLevel.Name" Name="Name" />
                            </RadzenFormField>
                    </RadzenColumn>
                </RadzenRow>
                <RadzenStack Orientation="Orientation.Horizontal">
                    <RadzenButton Text="Zatwierdź" ButtonType="ButtonType.Submit" />
                </RadzenStack>
            </RadzenStack>
        </EditForm>
    </RadzenCard>
</RadzenStack>



@code {
    private FluentValidationValidator? _fluentValidationValidator;
    private PositionLevelDto _positionLevel = new();

    private async Task SubmitPositionLevel()
    {
        _positionLevelService.Create(_positionLevel);
        _notificationService.Notify(new NotificationMessage
        {
            Severity = NotificationSeverity.Success,
            Summary = "Sukces",
            Detail = "Pomyślnie utworzono poziom stanowiska",
            Duration = 4000
        });
        await _navigationHelper.GoBackAsync();
    }
}
