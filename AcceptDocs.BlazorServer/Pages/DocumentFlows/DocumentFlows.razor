@page "/flow"
@inject DialogService _dialogService
@inject IDocumentFlowService _documentFlowService
@inject NotificationService _notificationService

<PageTitle>Przepływ dokumentów</PageTitle>

<RadzenStack Gap="1rem" class="mx-3 mb-3">
    <RadzenStack Gap="1rem" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
        <RadzenText TextStyle="TextStyle.H5">Przepływ dokumentów</RadzenText>
        <NavigationButton Text="Dodaj przepływ" Path="flow/add"/>
    </RadzenStack>

    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" Data="@_flows" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
        <Columns>
            <RadzenDataGridColumn Property="DocumentFlowId" Title="Id" Width="100px" />
            <RadzenDataGridColumn Property="Name" Title="Nazwa" >
                <Template Context="flow">
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="3px" AlignItems="AlignItems.Center">
                        <span>@flow.Name</span>
                        <RadzenIcon Icon="help" title="@flow.Description" style="cursor: pointer;" />
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Title="Metoda selekcji">
                <Template Context="flow">
                    @EnumHelper.GetDescription(flow.SelectionMethod)
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Title="Przypisane osoby">
                <Template Context="flow">
                    <a href=@("flow/users/" + flow.DocumentFlowId)>Przypisanych: @flow.Users.Count</a>
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn Title="Akcje" Width="100px" Sortable="false" Filterable="false">
                <Template Context="flow">
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="5px">
                        <NavigationButton Icon="edit" Size="ButtonSize.Small" Path="@("flow/update/" + flow.DocumentFlowId)" />
                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(() => Delete(flow.DocumentFlowId))" />
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    private List<DocumentFlowDto> _flows = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _flows = _documentFlowService.GetAllWithUsers();
    }

    private async Task Delete(int id)
    {
        bool? confirmed = await _dialogService.Confirm(
            "Czy na pewno chcesz usunąć przepływ?",
            "Potwierdzenie",
            new ConfirmOptions()
                {
                    OkButtonText = "Tak",
                    CancelButtonText = "Nie",
                }
        );

        if (confirmed == true) {
            _documentFlowService.Delete(id);
            _notificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Sukces",
                Detail = "Pomyślnie usunięto przepływ",
                Duration = 4000
            });
            OnInitialized();
        }
    }
}
