@page "/documentType"
@inject IDocumentTypeService _documentTypeService
@inject DialogService _dialogService
@inject NotificationService _notificationService

<PageTitle>Typy dokumentów</PageTitle>

<RadzenStack Gap="1rem" class="mx-3 mb-3">
    <RadzenStack Gap="1rem" Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
        <RadzenText TextStyle="TextStyle.H5">Typy dokumentów</RadzenText>
        <NavigationButton Text="Dodaj typ dokumentu" Path="documentType/add" />
    </RadzenStack>

    <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true" Data="@_documentTypes" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single">
        <Columns>
            <RadzenDataGridColumn Property="DocumentTypeId" Title="Id" Width="100px" />
            <RadzenDataGridColumn Property="Name" Title="Nazwa" />
            <RadzenDataGridColumn Title="Akcje" Width="100px" Sortable="false" Filterable="false">
                <Template Context="documentType">
                    <RadzenStack Orientation="Orientation.Horizontal" Gap="5px">
                        <NavigationButton Icon="edit" Size="ButtonSize.Small" Path="@("documentType/update/" + documentType.DocumentTypeId)" />
                        <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Size="ButtonSize.Small" Click="@(() => Delete(documentType.DocumentTypeId))" />
                    </RadzenStack>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</RadzenStack>

@code {
    private List<DocumentTypeDto> _documentTypes = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _documentTypes = _documentTypeService.GetAll();
    }

    private async Task Delete(int id)
    {
        if(_documentTypeService.CanDelete(id)) {
            bool? confirmed = await _dialogService.Confirm(
                "Czy na pewno chcesz usunąć typ dokumentu?",
                "Potwierdzenie",
                new ConfirmOptions()
                    {
                        OkButtonText = "Tak",
                        CancelButtonText = "Nie",
                    }
            );

            if (confirmed == true) {
                _documentTypeService.Delete(id);
                _notificationService.Notify(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Sukces",
                    Detail = "Pomyślnie usunięto typ dokumentu",
                    Duration = 4000
                });
                OnInitialized();
            }
        } else {
            _notificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Nie można usunąć typu dokumentu",
                Detail = "Istnieją dokumenty z przypisanym typem usuń je lub zmodyfikuj zanim usuniesz typ.",
                Duration = 4000
            });
        }
    }
}
