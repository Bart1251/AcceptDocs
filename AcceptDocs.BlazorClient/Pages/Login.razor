@page "/login"
@layout MainLayout

@inject AuthenticationStateProvider _authStateProvider
@inject NavigationManager _navigationManager
@inject IAuthService _authService;


<PageTitle>Login</PageTitle>

<RadzenStack class="min-vh-100" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
    <RadzenCard>
        <EditForm Model="@_loginData" OnValidSubmit="@LoginUser">
            <RadzenStack AlignItems="AlignItems.Stretch">
                <h3>Zaloguj się do systemu</h3>
                <RadzenFormField Text="Login">
                    <RadzenTextBox @bind-Value="@_loginData.Login"/>
                </RadzenFormField>
                <RadzenFormField Text="Password">
                    <RadzenPassword @bind-Value="@_loginData.Password" />
                </RadzenFormField>
                <RadzenButton Text="Zaloguj" ButtonType="ButtonType.Submit"/>
            </RadzenStack>
        </EditForm>
    </RadzenCard>
</RadzenStack>

@code {
    private UserLoginDto _loginData = new();

    protected override async Task OnInitializedAsync()
    {
        var state = await _authStateProvider.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated == true) {
            _navigationManager.NavigateTo("/");
        }
    }

    private async Task LoginUser()
    {
        if(await _authService.Login(_loginData)) {
            _navigationManager.NavigateTo("/");
        }
        else {
            //wyświetl błąd
        }
    } 
}